# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aCNLe2C2OoFGdH3uc20FIot2WRCxxYrN
"""

import pandas as pd
import numpy as np
data = pd.read_csv("casestudy (1).csv")

data.info()

data.head()

data.describe()

"""***Total Revenue for the current Year***

"""

data['year'].value_counts()

#from the above data we can see that the current year is "2017"
data.groupby(['year'])[['net_revenue']].sum()

"""From the above data, we can see that the total_revenue for current year (2017) is 31417495.03

***New Customer Revenue***
"""

#finding the count of customer emails
my_array = np.array(np.unique(data['customer_email'], return_counts=True)).T

#converting the unique mails and counts to a data frame
df = pd.DataFrame(my_array, columns = ['Column_A','Column_B'])

df.describe()

#dropping email with count more than 1
df = df.loc[df["Column_B"] == 1]

#creating a new dataframe from existing dataframe with unique mails
newdf = data[data['customer_email'].isin(df['Column_A'])]
newdf.describe()

newdf.groupby(['year'])[['net_revenue']].sum()

"""New Customer Revenue is 2.8677661e+07

***Existing Customer Growth.***
"""

#defining df with customer_email and their frequency counts
df = pd.DataFrame(my_array, columns = ['Column_A','Column_B'])

df.describe()

#dropping email with count equal to 1
#this step makes sure that only existing customers are included in the calculation of reveneue
df = df.loc[df["Column_B"] != 1]

df['Column_B'].value_counts()

#creating another dataframe with datas from year 2017
dfcurrent = data[data['year']==2017]

#dropping the new customers from year 2017
dfcurrent = dfcurrent[dfcurrent['customer_email'].isin(df['Column_A'])]

dfcurrent.describe()

#finally collecting the exisiting customers from previous year
current = data[data['customer_email'].isin(dfcurrent['customer_email'])]

current.describe()

current.groupby(['year'])[['net_revenue']].sum()

"""The existing customer revenue growth = 2740887.39-2620648.65 = 120238.74

***Revenue lost from attrition***
"""

#to find the revenue lost from attrition we have to see how many customers we lost in 2017
#converting the unique mails and counts to a data frame
df = pd.DataFrame(my_array, columns = ['Column_A','Column_B'])

#dropping email with count more than 1
df = df.loc[df["Column_B"] == 1]

#creating another dataframe with datas from year 2016
dfprev = data[data['year']==2016]

#finally collecting the unique customers in year 2016
prev = dfprev[dfprev['customer_email'].isin(df['Column_A'])]

prev['net_revenue'].sum()

#creating another dataframe with datas from year 2015
dfold = data[data['year']==2015]

#finally collecting the unique customers in year 2015
old = dfold[dfold['customer_email'].isin(df['Column_A'])]

old['net_revenue'].sum()

"""So the total revenue lost from attrition will be the sum of revenue from  2015 and revenue from 2016, which is equal to 16397370.16+21476000 = 37,873,370

***Existing Customer Revenue Current Year***

While calculating the exisitng customer revenue growth, I have calculated the exisitng customer revenue current year which is 2740887.39

***Existing Customer Revenue Prior Year***

While calculating the exisitng customer revenue growth, I have calculated the exisitng customer revenue in year 2016 which is 2620648.65 and the customer revenue in year 2015 which is 868493.65

***Total Customers Current Year***
"""

#dataframe with datas from year 2017
dfcurrent = data[data['year']==2017]

dfcurrent.describe()

"""From the above data we can see that the count is 249987 which is the number of customers for current year

***Total Customers Previous Year***
"""

#dataframe with datas from year 2016
dfprev = data[data['year']==2016]

dfprev.describe()

"""From the above data we can see that the count is 204646 which is the number of customers for year 2016"""

#dataframe with datas from year 2015
dfold = data[data['year']==2015]

dfold.describe()

"""From the above data we can see that the count is 231294 which is the number of customers for year 2015

***New Customers***

In second part of this case study we calculated the new customer revenue using newdf dataframe. So I am using that df to find the new customers
"""

#dataframe with newcustomers from year 2017
newcustomers = newdf[newdf['year']==2017]

newcustomers['customer_email']

"""The customer mails belong to the new customers, and the total new customers is 228262

***Lost Customers***
"""

customers2016 = data[data['year']==2016]

customers2016.describe()

customers2017 = data[data['year']==2017]

#calculating the exisiting customers in 2017 from 2016
existcustomers = customers2016[customers2016['customer_email'].isin(customers2017['customer_email'])]

existcustomers.describe()

"""We can see that out of 204646 customers from 2016, only 20959 exist in 2017. Therefore the lost customers = 183687

***PLOTS***
"""

data = data.drop(columns=['Unnamed: 0'])

#pairplot showing distribution of revenue with year
pp = sns.pairplot(data=data,
                  y_vars=['year'],
                  x_vars=['net_revenue'])

#correlation between revenue and year
a = sns.heatmap(data.corr(),annot=True,cmap='YlGnBu')

#distribution of revenue
#histplot
import seaborn as sns
bins=[50,100,150,200,250]
out=pd.cut(data.net_revenue,
          bins=bins,
          include_lowest=True)
ax=out.value_counts(sort=False).plot.bar(
rot=0,
color='g',   
    
figsize=(10,10))
plt.xlabel('net_revenue')
plt.ylabel('count')
plt.show

"""From the above plots we can observe that the distribution of revenue across year and across the min-max range is almost equal"""